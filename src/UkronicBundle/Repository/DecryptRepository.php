<?php

namespace UkronicBundle\Repository;
use UkronicBundle\Entity\User;
use Doctrine\DBAL\Query\Doctrine_Query;

/**
 * DecryptRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DecryptRepository extends \Doctrine\ORM\EntityRepository
{
/*
	public function nbComment(User $user){
		$monId = $user->getId();
		$q = $this->getEntityManager()
		->createQuery("SELECT COUNT(d.id) FROM UkronicBundle:Decrypt d JOIN d.user u");
    	
 
  	$nb = $q->getSingleResult();
		return $nb;

	}
*/

	public function movieLastDecrypted() {
		$q = $this->getEntityManager()
		->createQuery("SELECT d FROM UkronicBundle:Decrypt d  ORDER BY d.dateDecrypt DESC" );
    	$decrypts = $q->getResult();
		return $decrypts;

	}

	public function serieLastDecrypted() {
		$q = $this->getEntityManager()
		->createQuery("SELECT d FROM UkronicBundle:Decrypt d WHERE d.typeDecrypt = 'S' ORDER BY d.dateDecrypt DESC" );
    	$decrypts = $q->getResult();
		return $decrypts;

	}



	public function sequenceDecrypted(User $user){
		// TODO requête comptant le nombre de séquences décryptées
		$monId = $user->getId();
		$q = $this->getEntityManager()
		->createQuery("SELECT COUNT(d.id) FROM UkronicBundle:Decrypt d LEFT JOIN d.user u WHERE d.typeDecrypt = 'S'" );
    	$nb = $q->getSingleResult();
		return $nb;
		
	}

	public function sequenceM100Decrypted(User $user){
		// TODO nombre de séquences de moins de 100 mots
		$monId = $user->getId();
		$q = $this->getEntityManager()
		->createQuery("SELECT COUNT(d.id) FROM UkronicBundle:Decrypt d JOIN d.user u WHERE d.typeDecrypt = 'S' AND d.wordCount < 100" );
    	$nb = $q->getSingleResult();
		return $nb;
	}

	public function sequenceM300Decrypted(User $user){
		return 2;
	}

	public function sequenceO300Decrypted(User $user){
		return 1;
	}

	public function endDecrypted(User $user){
		$monId = $user->getId();
		$q = $this->getEntityManager()
		->createQuery("SELECT COUNT(d.id) FROM UkronicBundle:Decrypt d LEFT JOIN d.user u WHERE d.typeDecrypt = 'F'" );
    	$nb = $q->getSingleResult();
		return $nb;
	}

	public function endM100Decrypted(User $user){
		return 3;
	}

	public function endM300Decrypted(User $user){
		return 2;
	}

	public function endO300Decrypted(User $user){
		return 1;
	}

}
